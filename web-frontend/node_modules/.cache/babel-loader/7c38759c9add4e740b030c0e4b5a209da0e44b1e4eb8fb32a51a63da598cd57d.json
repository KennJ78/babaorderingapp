{"ast":null,"code":"// Web version of your Flutter DataService\nimport { categories, products } from '../data/mockData';\nclass DataService {\n  // Get all categories\n  static getAllCategories() {\n    return categories;\n  }\n\n  // Get active categories only\n  static getActiveCategories() {\n    return categories.filter(category => category.isActive);\n  }\n\n  // Get category by ID\n  static getCategoryById(id) {\n    return categories.find(category => category.id === id) || null;\n  }\n\n  // Get all products\n  static getAllProducts() {\n    return products;\n  }\n\n  // Get products by category\n  static getProductsByCategory(categoryId) {\n    if (categoryId === 'all') {\n      return products;\n    }\n    return products.filter(product => product.categoryId === categoryId);\n  }\n\n  // Get product by ID\n  static getProductById(id) {\n    return products.find(product => product.id === id) || null;\n  }\n\n  // Search products by name\n  static searchProducts(query) {\n    const lowercaseQuery = query.toLowerCase();\n    return products.filter(product => {\n      return product.name.toLowerCase().includes(lowercaseQuery) || product.description.toLowerCase().includes(lowercaseQuery);\n    });\n  }\n\n  // Get products with filters (exact same logic as Flutter)\n  static getFilteredProducts({\n    categoryId,\n    searchQuery,\n    availableOnly\n  }) {\n    let filteredProducts = [...products];\n\n    // Filter by category\n    if (categoryId && categoryId !== 'all') {\n      filteredProducts = filteredProducts.filter(product => product.categoryId === categoryId);\n    }\n\n    // Filter by search query\n    if (searchQuery && searchQuery.trim()) {\n      const lowercaseQuery = searchQuery.toLowerCase();\n      filteredProducts = filteredProducts.filter(product => {\n        return product.name.toLowerCase().includes(lowercaseQuery) || product.description.toLowerCase().includes(lowercaseQuery);\n      });\n    }\n\n    // Filter by availability\n    if (availableOnly === true) {\n      filteredProducts = filteredProducts.filter(product => product.isAvailable);\n    }\n    return filteredProducts;\n  }\n}\nexport default DataService;","map":{"version":3,"names":["categories","products","DataService","getAllCategories","getActiveCategories","filter","category","isActive","getCategoryById","id","find","getAllProducts","getProductsByCategory","categoryId","product","getProductById","searchProducts","query","lowercaseQuery","toLowerCase","name","includes","description","getFilteredProducts","searchQuery","availableOnly","filteredProducts","trim","isAvailable"],"sources":["C:/Users/Daenerys/Downloads/babaorderingapp/web-frontend/src/services/DataService.js"],"sourcesContent":["// Web version of your Flutter DataService\nimport { categories, products } from '../data/mockData';\n\nclass DataService {\n  // Get all categories\n  static getAllCategories() {\n    return categories;\n  }\n\n  // Get active categories only\n  static getActiveCategories() {\n    return categories.filter(category => category.isActive);\n  }\n\n  // Get category by ID\n  static getCategoryById(id) {\n    return categories.find(category => category.id === id) || null;\n  }\n\n  // Get all products\n  static getAllProducts() {\n    return products;\n  }\n\n  // Get products by category\n  static getProductsByCategory(categoryId) {\n    if (categoryId === 'all') {\n      return products;\n    }\n    return products.filter(product => product.categoryId === categoryId);\n  }\n\n  // Get product by ID\n  static getProductById(id) {\n    return products.find(product => product.id === id) || null;\n  }\n\n  // Search products by name\n  static searchProducts(query) {\n    const lowercaseQuery = query.toLowerCase();\n    return products.filter(product => {\n      return product.name.toLowerCase().includes(lowercaseQuery) ||\n             product.description.toLowerCase().includes(lowercaseQuery);\n    });\n  }\n\n  // Get products with filters (exact same logic as Flutter)\n  static getFilteredProducts({ categoryId, searchQuery, availableOnly }) {\n    let filteredProducts = [...products];\n\n    // Filter by category\n    if (categoryId && categoryId !== 'all') {\n      filteredProducts = filteredProducts.filter(product => product.categoryId === categoryId);\n    }\n\n    // Filter by search query\n    if (searchQuery && searchQuery.trim()) {\n      const lowercaseQuery = searchQuery.toLowerCase();\n      filteredProducts = filteredProducts.filter(product => {\n        return product.name.toLowerCase().includes(lowercaseQuery) ||\n               product.description.toLowerCase().includes(lowercaseQuery);\n      });\n    }\n\n    // Filter by availability\n    if (availableOnly === true) {\n      filteredProducts = filteredProducts.filter(product => product.isAvailable);\n    }\n\n    return filteredProducts;\n  }\n}\n\nexport default DataService;\n"],"mappings":"AAAA;AACA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,kBAAkB;AAEvD,MAAMC,WAAW,CAAC;EAChB;EACA,OAAOC,gBAAgBA,CAAA,EAAG;IACxB,OAAOH,UAAU;EACnB;;EAEA;EACA,OAAOI,mBAAmBA,CAAA,EAAG;IAC3B,OAAOJ,UAAU,CAACK,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,CAAC;EACzD;;EAEA;EACA,OAAOC,eAAeA,CAACC,EAAE,EAAE;IACzB,OAAOT,UAAU,CAACU,IAAI,CAACJ,QAAQ,IAAIA,QAAQ,CAACG,EAAE,KAAKA,EAAE,CAAC,IAAI,IAAI;EAChE;;EAEA;EACA,OAAOE,cAAcA,CAAA,EAAG;IACtB,OAAOV,QAAQ;EACjB;;EAEA;EACA,OAAOW,qBAAqBA,CAACC,UAAU,EAAE;IACvC,IAAIA,UAAU,KAAK,KAAK,EAAE;MACxB,OAAOZ,QAAQ;IACjB;IACA,OAAOA,QAAQ,CAACI,MAAM,CAACS,OAAO,IAAIA,OAAO,CAACD,UAAU,KAAKA,UAAU,CAAC;EACtE;;EAEA;EACA,OAAOE,cAAcA,CAACN,EAAE,EAAE;IACxB,OAAOR,QAAQ,CAACS,IAAI,CAACI,OAAO,IAAIA,OAAO,CAACL,EAAE,KAAKA,EAAE,CAAC,IAAI,IAAI;EAC5D;;EAEA;EACA,OAAOO,cAAcA,CAACC,KAAK,EAAE;IAC3B,MAAMC,cAAc,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC;IAC1C,OAAOlB,QAAQ,CAACI,MAAM,CAACS,OAAO,IAAI;MAChC,OAAOA,OAAO,CAACM,IAAI,CAACD,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,cAAc,CAAC,IACnDJ,OAAO,CAACQ,WAAW,CAACH,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,cAAc,CAAC;IACnE,CAAC,CAAC;EACJ;;EAEA;EACA,OAAOK,mBAAmBA,CAAC;IAAEV,UAAU;IAAEW,WAAW;IAAEC;EAAc,CAAC,EAAE;IACrE,IAAIC,gBAAgB,GAAG,CAAC,GAAGzB,QAAQ,CAAC;;IAEpC;IACA,IAAIY,UAAU,IAAIA,UAAU,KAAK,KAAK,EAAE;MACtCa,gBAAgB,GAAGA,gBAAgB,CAACrB,MAAM,CAACS,OAAO,IAAIA,OAAO,CAACD,UAAU,KAAKA,UAAU,CAAC;IAC1F;;IAEA;IACA,IAAIW,WAAW,IAAIA,WAAW,CAACG,IAAI,CAAC,CAAC,EAAE;MACrC,MAAMT,cAAc,GAAGM,WAAW,CAACL,WAAW,CAAC,CAAC;MAChDO,gBAAgB,GAAGA,gBAAgB,CAACrB,MAAM,CAACS,OAAO,IAAI;QACpD,OAAOA,OAAO,CAACM,IAAI,CAACD,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,cAAc,CAAC,IACnDJ,OAAO,CAACQ,WAAW,CAACH,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,cAAc,CAAC;MACnE,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIO,aAAa,KAAK,IAAI,EAAE;MAC1BC,gBAAgB,GAAGA,gBAAgB,CAACrB,MAAM,CAACS,OAAO,IAAIA,OAAO,CAACc,WAAW,CAAC;IAC5E;IAEA,OAAOF,gBAAgB;EACzB;AACF;AAEA,eAAexB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}